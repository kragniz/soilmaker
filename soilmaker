#!/usr/bin/env python
import random

class Svg(object):
    __header = '''<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   width="2600"
   height="2500">

  <metadata
     id="metadata">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>

  <defs>
    <style type="text/css"><![CDATA[
      text {
        font-family: Sans;
        text-anchor: end;
      }
    ]]></style>
  </defs>
   <g
     id="profile"
     transform="translate(500,200)">'''

    __footer = '''    <path
       style="fill:none;stroke:#000000;stroke-width:8;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
       d="M 500,0 500, 2000 250, 2200 0, 2000 0, 0 z"
       id="outline"/>
  </g>
</svg>'''

    __bottom = '''    <path
       style="fill:#ff00ff;fill-opacity:0.5;stroke:none"
       d="M 500,700 500, 2000 250, 2200 0, 2000 0, 700 z"
       id="bottom"/>'''

    __horizon = '''
    <g
       id="horizon">
      <rect
         style="fill:#{colour};fill-opacity:0.75;stroke:none"
         width="500"
         height="{hight}"
         x="0"
         y="{start}" />
      <g
         transform="translate(0,{depth})">
        <path
           id="bar"
           d="M -50, 0 500, 0"
           style="fill:none;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />

        <text font-size="70" transform="translate(-60,25)">
          {text}
        </text>
      </g>
    </g>'''

    def horizon(self, depth, start=0):
    	return self.__horizon.format(start=start,
    		                         depth=depth,
    		                         hight=depth-start,
    		                         text=depth/10,
    		                         colour=''.join([hex(random.randint(50, 255))[2:] for i in range(3)]))

    def make(self, *args):
    	lastHorizon = 0
    	horizons = ''
    	for h in args:
    		horizons = self.horizon(h, lastHorizon) + horizons
    		lastHorizon = h
    	return self.__header + horizons + self.__footer

if __name__ == '__main__':
	s = Svg()
	print s.make(300, 865, 1700)
